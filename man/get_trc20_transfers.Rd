% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_trc20_transfers.R
\name{get_trc20_transfers}
\alias{get_trc20_transfers}
\title{Get TRC-20 transfers}
\usage{
get_trc20_transfers(
  contract_address = NULL,
  min_timestamp,
  max_timestamp,
  max_attempts = 3L
)
}
\arguments{
\item{contract_address}{(character): contract address of
a TRC-20 token of interest, either in \code{base58check} or
\code{hex} format.}

\item{min_timestamp}{(numeric or character): a Unix
timestamp (\emph{including milliseconds}), which defines the
beginning of the period of interest (inclusive). Defaults to 0.}

\item{max_timestamp}{(numeric or character): a Unix
timestamp (\emph{including milliseconds}), which defines the
end of the period of interest (inclusive).}

\item{max_attempts}{(integer, positive): specifies the
maximum number of additional attempts to call a URL if the
first attempt fails (i.e. its call status is different from
\code{200}). Additional attempts are implemented with an exponential
backoff. Defaults to \code{3}.}
}
\value{
Tibble with the following colums (see \code{\link[=get_tx_info_by_id]{get_tx_info_by_id()}} and
\code{\link[=get_trc20_token_description]{get_trc20_token_description()}} for their definitions):
\itemize{
\item \code{tx_id} (character);
\item \code{block_number} (character);
\item \code{timestamp} (POSIXct, UTC timezone);
\item \code{from_address} (character);
\item \code{to_address} (character);
\item \code{is_contract_from_address} (boolean);
\item \code{is_contract_to_address} (boolean);
\item \code{contract_result} (character);
\item \code{confirmed} (boolean);
\item \code{amount} (double);
\item \code{token_contract_address} (character);
\item \code{token_name} (character);
\item \code{token_abbr} (character).
}
}
\description{
Returns TRC-20 transfer transactions for a user-specified time range
}
\details{
If \code{contract_address = NULL}, all TRC-20 token transfers will be
returned for the requested time range. However, if \code{contract_address} is
specified, only results for the corresponding token will be returned.
This argument accepts only one address at a time.

The number of transfers that take place on the TRON blockchain can be
very large, and thus users are advised to choose \code{min_timestamp} and
\code{max_timestamp} wisely. If the requested time range is too large, the
maximum number of transactions returned by the underlying Tronscan API
will be \emph{capped} at 10000, and the processing time may become
prohibitively long. Chunking the time range of interest into
smaller periods can help to avoid gaps in data in such cases. However,
users would have to implement their own logic for that.
}
\examples{
# Results contain all TRC-20 transfers that took place
# within the specified time range:
r1 <- get_trc20_transfers(
  min_timestamp = "1609459860000",
  max_timestamp = "1609459875000"
)
print(r1)

# Results contain transfers of a specific token:
r2 <- r <- get_trc20_transfers(
  contract_address = "TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t",
  min_timestamp = "1609459860000",
  max_timestamp = "1609459875000"
)
print(r2)
}
