% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_events_by_contract_address.R
\name{get_events_by_contract_address}
\alias{get_events_by_contract_address}
\title{Get events by contract address}
\usage{
get_events_by_contract_address(
  address,
  event_name = NULL,
  block_number = NULL,
  only_confirmed = NULL,
  only_unconfirmed = NULL,
  min_timestamp = 0,
  max_timestamp,
  direction = "desc",
  max_attempts = 3L
)
}
\arguments{
\item{address}{(character): address of the account of interest,
either in \code{base58check} or \code{hex} format.}

\item{event_name}{(character): name of the event of
interest (e.g., \code{Transfer}). Defaults to \code{NULL}.}

\item{block_number}{(character): number of the block of
interest.}

\item{only_confirmed}{(boolean or \code{NULL}): if \code{NULL}
(default) or \code{FALSE}, results are returned for both confirmed and
unconfirmed transactions. If \code{TRUE}, only results for confirmed
transactions are returned.}

\item{only_unconfirmed}{(boolean or \code{NULL}): if \code{NULL}
(default) or \code{FALSE}, results are returned for both confirmed and
unconfirmed transactions. If \code{TRUE}, only results for
unconfirmed transactions are returned. Cannot be used
simultanously with the \code{only_confirmed} argument.}

\item{min_timestamp}{(numeric or character): a Unix
timestamp (\emph{including milliseconds}), which defines the
beginning of the period of interest (inclusive). Defaults to 0.}

\item{max_timestamp}{(numeric or character): a Unix
timestamp (\emph{including milliseconds}), which defines the
end of the period of interest (inclusive).}

\item{direction}{(character): specifies the direction of
ordering the results - descending (\code{desc}) or ascending (\code{asc}).}

\item{max_attempts}{(integer, positive): specifies the
maximum number of additional attempts to call the URL if the
first attempt fails (i.e. its call status is different from
\code{200}). Additional attempts are implemented with an exponential
backoff. Defaults to \code{3}.}
}
\value{
A nested tibble where each row corresponds to an event associated
with the account of interest. This tibble contains the following
columns:
\itemize{
\item \code{tx_id} (character): transaction ID;
\item \code{block_number} (character);
\item \code{block_timestamp} (POSIXct, UTC timezone);
\item \code{contract_address} (character): adress of the smart contract that implemented
the event;
\item \code{event_name} (character): possible values of this column are contract-
and event-specific;
\item \code{event_data} (list): each element of this list contains a named list with
additional attributes of the event.
}

If no events are found for the specified combinations of query
parameters, nothing (\code{NULL}) is returned, with a console message
\code{"No data found"}.
}
\description{
Retrieves events associated with a smart contract
}
\details{
The exact content of \code{event_data} in the tibble returned by this
function will be contract- and event-specific. Thus, these data are
returned in the form of a named R list as-is, i.e. without any
processing. Users are advised to develop their own, task-specific, logic
to process event attributes.
}
\examples{
address <- "TKttnV3FSY1iEoAwB4N52WK2DxdV94KpSd"
min_timestamp <- "1576317786000"
max_timestamp <- "1576317996000"
get_events_by_contract_address(
  address = address,
  min_timestamp = min_timestamp,
  max_timestamp = max_timestamp
)
get_events_by_contract_address(
  address = address,
  min_timestamp = min_timestamp,
  max_timestamp = max_timestamp,
  event_name = "Transfer",
  direction = "asc"
)
}
