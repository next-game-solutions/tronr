% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_tx_for_time_range.R
\name{get_tx_for_time_range}
\alias{get_tx_for_time_range}
\title{Get transactions for a time range}
\usage{
get_tx_for_time_range(
  min_timestamp = 0,
  max_timestamp = NULL,
  add_contract_data = TRUE,
  max_attempts = 3L
)
}
\arguments{
\item{min_timestamp}{(numeric or character): a Unix
timestamp (\emph{including milliseconds}), which defines the
beginning of the period of interest (inclusive). Defaults to 0.}

\item{max_timestamp}{(numeric or character): a Unix
timestamp (\emph{including milliseconds}), which defines the
end of the period of interest (inclusive).}

\item{add_contract_data}{(boolean): if \code{TRUE} (default),
adds column \code{contract_data} to the resultant tibble (see Value).}

\item{max_attempts}{(integer, positive): specifies the
maximum number of additional attempts to call a URL if the
first attempt fails (i.e. its call status is different from
\code{200}). Additional attempts are implemented with an exponential
backoff. Defaults to \code{3}.}
}
\value{
A nested tibble where each row corresponds to one transaction.
A detailed description of the content of this tibble can be found in the
help file for \code{\link[=get_tx_info_by_id]{get_tx_info_by_id()}}.
}
\description{
Returns transactions that took place within a user-specified period of time
}
\details{
The number of transactions that take place on the TRON blockchain
is very large, and thus users are advised to choose \code{min_timestamp} and
\code{max_timestamp} wisely. If the requested time range is too large, the
maximum number of transactions returned by the underlying Tronscan API
will be \emph{capped} at 10000, and the processing time may become
prohibitively long. Chunking the time range of interest into
smaller periods can help to avoid gaps in data in such cases. However,
users would have to implement their own logic for that.
}
\examples{
\donttest{
min_timestamp <- "1577836800000"
max_timestamp <- "1577836803000"
tx_df <- get_tx_for_time_range(min_timestamp, max_timestamp)
print(tx_df)
}
}
